#!/usr/bin/env ruby

require 'optparse'

def start_server()
	if File.exists?("./src/mvs.pid") == false
		system("cd ./src; nohup rackup -E production -p 8080 -s mongrel -P mvs.pid &")
	end
end

def stop_server()
	if File.exists?("./src/mvs.pid")
    		pid = File.open("./src/mvs.pid").first.to_i
		if pid > 1
			system("kill -TERM #{pid}")
		end
	end
end

def devel_mode()
	puts "Development Mode\n"
	system("cd ./src; rackup -E development -p 8080 -s mongrel")
end

def install_depends()
	system("sudo gem install rack")
	system("sudo gem install mongrel")
	system("sudo gem install sinatra")
	system("sudo gem install browser")
	system("sudo gem install haml")
	system("sudo gem install nokogiri")
end

def build_release()
	if File.exists?("build/")
		system("rm -r build/")
	end

	Dir.mkdir("build")

	if File.exists?("docs/")
		system("rm -r docs/")
	end

	Dir.mkdir("docs/")

	system("tar -czf build/mvs.tar.gz mvsctl mvsctl_gui docs/ src/config.ru src/MovieStreamer.rb")

	system("haml src/views/browsers.haml docs/Supported_Browsers.html")
	system("haml src/views/readme.haml docs/ReadMe.html")
end

def change_directory( path )
	if File.exists?("./src/public")
		File.unlink("./src/public")
	end
	
	File.symlink(path, "./src/public")

end

options = {}

optparse = OptionParser.new do |opts|

    opts.banner = "Usage: mvsctl [options]"

	opts.on('-s', '--start', 'Start Server') do
		start_server	
	end

	opts.on('-x', '--stop', 'Stop Server') do
		stop_server	
	end

	opts.on('-d', '--devel', 'Development Mode') do 
		devel_mode	
	end

	opts.on('-i', '--install', 'Install Dependencies') do
		install_depends	
	end

	opts.on('-b', '--build', 'Build a release') do
        build_release	
	end

	opts.on('-c', '--change PATH', 'Change the movie directory') do |p|
		change_directory p	
	end 

	opts.on('-h', '--help', 'Display this screen') do
        puts opts
        exit
    end
end

begin
	optparse.parse!
rescue Exception => e
	puts "Exception Occured: #{e}"
	exit 1
end
